#+STARTUP: overview
#+PROPERTY: header-args :tangle osx-setup.sh
* OSX

#+BEGIN_SRC sh
defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder
defaults write -g ApplePressAndHoldEnabled -bool true
defaults write com.apple.dock autohide -bool true
#+END_SRC

* Xcode command line tools

Install command line tools.

We reset the path to prevent:

xcrun: error: active developer path ("/Applications/Xcode.app/Contents/Developer") does not existo

Which seems to happen if you are installing a new version of xcode.

#+BEGIN_SRC sho
xcode-select --install
wait
sudo xcode-select --reset 
#+END_SRC

* Homebrew

To make homebrew work properly you need to fix ruby script permissions.

Install.

#+BEGIN_SRC sh
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
wait
#+END_SRC

Update.

#+BEGIN_SRC sh
brew update
wait
#+END_SRC

Disable analytics.

#+BEGIN_SRC sh
brew analytics off
brew tap homebrew/cask
#+END_SRC

* Mullvad

Install mullvad vpn.

#+BEGIN_SRC sh
brew install --cask mullvadvpn
wait
#+END_SRC

Install mullvad browser.

#+BEGIN_SRC sh
brew install --cask mullvad-browser
wait
#+END_SRC

To enable Kagi as default search in Mullvad.

1. Go to:
   https://kagi.com/settings?p=user_details
2. Copy the session link   
3. Go to that URL in Mullvad Browser
4. Right click on the search bar
5. In the drop down menu select Add "Kagi search"
6. Go to:
   about:preferences#search
7. Under default search engine select "Kagi"

* Keyboard

#+BEGIN_SRC sh
brew install --cask chrysalis
wait
#+END_SRC
* Git

Install latest version of git.

#+BEGIN_SRC sh
brew install git
wait
#+END_SRC

Set identity.

#+BEGIN_SRC sh
git config --global user.name "andersmurphy"
git config --global user.email "andersmurphy@gmail.com"
#+END_SRC

Set encrypted diffs.

#+BEGIN_SRC sh
git config --global diff.gpg.textconv "gpg --no-tty --decrypt"
#+END_SRC

Set [[https://help.github.com/en/articles/caching-your-github-password-in-git][credential store]].

#+BEGIN_SRC sh
git config --global credential.helper osxkeychain
#+END_SRC

Set editor. I always use magit so nano is only in case
of emergencies (emacs down).

#+BEGIN_SRC  sh
git config --global core.editor 'nano'
#+END_SRC

Set pull with rebase to be default.
#+BEGIN_SRC sh
git config --global pull.rebase true
#+END_SRC

Prune local branches when fetching changes from remote.
#+BEGIN_SRC sh
git config --global fetch.prune true
#+END_SRC

Set colour ui.

#+BEGIN_SRC sh
git config --global color.ui true
#+END_SRC

Create global git ignore file.

#+BEGIN_SRC sh
rm ~/.gitignore
ln -s ~/.emacs.d/setup/dotfiles/.gitignore ~/.gitignore
#+END_SRC

Set as global ignore file.

#+BEGIN_SRC sh
git config --global core.excludesfile '~/.gitignore'
#+END_SRC

Set external git diff algorithm.

#+BEGIN_SRC sh
git config --global diff.algorithm histogram
#+END_SRC

* Emacs

Build emacs from source:

#+BEGIN_SRC sh
brew install libxml2 gcc libgccjit
wait

# We clone a single branch for a slightly smaller download
git clone https://git.savannah.gnu.org/git/emacs.git --branch emacs-29 --single-branch
wait

cd emacs
git checkout emacs-29
./autogen.sh
./configure --with-cairo --with-imagemagick --with-xwidgets --with-native-compilation

make -j$(nproc)
wait

make clean install
wait

mv nextStep/Emacs.app /Applications
cd
#+END_SRC

** Emacs External Dependencies

Spellcheck depends on aspell.

#+BEGIN_SRC sh
brew install aspell
wait
#+END_SRC

Emms depends on mpv to play music.

#+BEGIN_SRC sh
brew install mpv
wait
rm ~/.config/mpv/mpv.conf
ln -s ~/.emacs.d/setup/dotfiles/.mpv/mpv.conf ~/.config/mpv/
#+END_SRC

Markdown mode depends on multimarkdown to preview markdown.

#+BEGIN_SRC sh
brew install multimarkdown
wait
#+END_SRC

Pandoc useful for converting between different file formats.

#+BEGIN_SRC sh
brew install pandoc
wait
#+END_SRC

Jet conversion between json and edn.

#+BEGIN_SRC sh
brew install borkdude/brew/jet
wait
#+END_SRC

qrencode for generating QR codes.

#+BEGIN_SRC sh
brew install qrencode
#+END_SRC

ftp and other network utils (no longer installed on OSX by default).

#+BEGIN_SRC sh
brew install inetutils
#+END_SRC

gnupg (gpg) for encryption (pinned to version 2.40). As later versions currently break emacs (M-x view-emacs-problems). 

#+BEGIN_SRC sh
curl https://raw.githubusercontent.com/Homebrew/homebrew-core/59edfe598541186430d49cc34f42671e849e2fc9/Formula/gnupg.rb > gnupg.rb
wait
brew install gnupg.rb
wait
rm gnupg.rb 
#+END_SRC

ripgrep needed for things that use ripgrep (eg: magit-todo) as OSX doesn't ship with grep.

#+BEGIN_SRC sh
brew install ripgrep
#+END_SRC

* Lima (Linux VM)

Installs Lima (https://lima-vm.io):

#+BEGIN_SRC sh
brew install lima
#+END_SRC

* Open jdk

Installs open jdk.

#+BEGIN_SRC sh
brew tap AdoptOpenJDK/openjdk
brew install adoptopenjdk17
wait
#+END_SRC

* Clojure

Language.

#+BEGIN_SRC sh
brew install clojure
wait
rm ~/.clojure/deps.edn
ln -s ~/.emacs.d/setup/dotfiles/.clojure/deps.edn ~/.clojure/
#+END_SRC

Build tool.

#+BEGIN_SRC sh
brew install leiningen
wait
rm ~/.lein/profiles.clj
ln -s ~/.emacs.d/setup/dotfiles/.lein/profiles.clj ~/.lein/
#+END_SRC

LSP.

#+BEGIN_SRC sh
brew install clojure-lsp/brew/clojure-lsp-native
#+END_SRC

clj-kondo config (used by LSP).

#+BEGIN_SRC sh
rm -r ~/.clj-kondo
mkdir ~/.clj-kondo
ln -s ~/.emacs.d/setup/dotfiles/.clj-kondo/config.edn ~/.clj-kondo/
#+END_SRC

* Babashka

Language.

#+BEGIN_SRC sh
brew install borkdude/brew/babashka
#+END_SRC

* Fennel

Language.

#+BEGIN_SRC sh
brew install fennel
#+END_SRC

* Javascript

Language.

#+BEGIN_SRC sh
brew install node
wait
#+END_SRC

Yarn.

#+BEGIN_SRC sh
npm install -g yarn
wait
#+END_SRC

LSP.

#+BEGIN_SRC sh
npm i -g typescript-language-server; npm i -g typescript
#+END_SRC

* Html

LSP.

#+BEGIN_SRC sh
npm install -g vscode-html-languageserver-bin
wait
#+END_SRC

* Other apps
** Dropbox

#+BEGIN_SRC sh
brew install --cask dropbox
wait
#+END_SRC

** Calibre

Useful for converting pdf to epub with `ebook-convert input_file output_file`.

#+BEGIN_SRC sh
brew install --cask calibre
wait
#+END_SRC

* OSX misc
** Clear fonts on retina screens
- First, turn OFF “Font smoothing” in System Preferences → General
- Go to System Preferences → Displays, uncheck Default and select scaled 2× resolution
https://tonsky.me/blog/monitors/

** Show hard drive in finder
1. While in the Finder, go to the "Finder" menu and select "Preferences".
2. From the "General" tab, place a check next to "Hard disks"
   -- this will make your hard drive visible on the Desktop.
3. From the "Sidebar" tab under "Devices" again place a check next to "Hard disks"
   -- this will put your hard drive in the sidebar of any finder window, and should also add it to "Open", "Save", and "Save As..." dialog sheets (as well as others)

** /Usr

/usr is hidden by default on MacOS but you can toggle visibility in Finder by using Shift+Command+Period
